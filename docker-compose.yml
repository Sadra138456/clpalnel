version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: parsian_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - parsian_network
    restart: unless-stopped

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: parsian_backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_SERVER=db
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      - db
      - redis
    networks:
      - parsian_network
    restart: unless-stopped

  # Database Service
  db:
    image: postgres:15-alpine
    container_name: parsian_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=your-strong-password
      - POSTGRES_DB=parsian_clinic
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - parsian_network
    restart: unless-stopped

  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: parsian_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - parsian_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: parsian_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./ssl:/etc/ssl/certs
      - ./backend/uploads:/var/www/uploads
    depends_on:
      - frontend
      - backend
    networks:
      - parsian_network
    restart: unless-stopped

  # Adminer (Database Management)
  adminer:
    image: adminer:latest
    container_name: parsian_adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      - db
    networks:
      - parsian_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  parsian_network:
    driver: bridge